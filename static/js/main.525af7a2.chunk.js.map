{"version":3,"sources":["components/PokemonShortCard.js","components/PokemonsList.js","components/PokemonAboutInfo.js","components/PokemonMoreInfo.js","components/NotFound.js","components/PokemonPage.js","components/Navigation.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonShortCard","data","useState","pokemonData","setPokemonData","useEffect","fetch","url","then","response","json","catch","error","console","log","className","to","id","src","sprites","other","dream_world","front_default","width","height","alt","name","abilities","map","item","index","ability","length","PokemonsList","ref","pokemonsData","searchValue","checkFilteredPokemon","toLowerCase","startsWith","style","display","forwardRef","PokemonAboutInfo","weight","PokemonMoreInfo","pokemonDataSpecies","base_happiness","capture_rate","color","egg_groups","NotFound","PokemonPage","setPokemonSpeciesData","match","useRouteMatch","params","useParams","Promise","all","data1","data2","exact","activeClassName","path","Navigation","matchBaseUrl","useLocation","pathname","Input","value","placeholder","type","onChange","autoComplete","App","setPokemonsData","setSearchValue","offset","setOffset","appEl","useRef","listEl","setListEl","prev","results","scrollHeight","current","clientHeight","onScroll","e","target","scrollTop","event","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525af7a2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PokemonShortCard({ data }) {\n  const [pokemonData, setPokemonData] = useState();\n\n  useEffect(() => {\n    fetch(data.url)\n      .then((response) => response.json())\n      .then((data) => setPokemonData(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <div className=\"pokemon-card\">\n      {pokemonData && (\n        <Link to={`/pokemon/${pokemonData.id}/about`}>\n          {pokemonData && (\n            <>\n              <div className=\"pokemon-card__image\">\n                <img\n                  src={pokemonData.sprites.other.dream_world.front_default}\n                  width=\"84\"\n                  height=\"84\"\n                  alt={pokemonData.name}\n                />\n              </div>\n              <div className=\"pokemon-card__id\">{pokemonData.id}</div>\n              <div className=\"pokemon-card__name pokemon-card__text-box\">\n                {pokemonData.name}\n              </div>\n              <ul className=\"pokemon-card__char pokemon-card__text-box\">\n                {pokemonData.abilities.map((item, index) => (\n                  <li key={item.ability.name}>\n                    {item.ability.name}\n                    {index === pokemonData.abilities.length - 1 ? \"\" : \", \"}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </Link>\n      )}\n    </div>\n  );\n}\n","import React, { forwardRef } from \"react\";\nimport PokemonShortCard from \"./PokemonShortCard\";\n\nfunction PokemonsList({ pokemonsData, searchValue }, ref) {\n  const checkFilteredPokemon = (item) => {\n    if (searchValue === \"\") {\n      return true;\n    }\n    const name = item.name.toLowerCase();\n    return name.startsWith(searchValue);\n  };\n  return (\n    <section className=\"pokemons-list container\" ref={ref}>\n      {pokemonsData &&\n        pokemonsData.map((item) => {\n          return (\n            <div\n              style={{ display: checkFilteredPokemon(item) ? \"block\" : \"none\" }}\n              key={item.name}\n            >\n              <PokemonShortCard data={item} />\n            </div>\n          );\n        })}\n    </section>\n  );\n}\n\nexport default forwardRef(PokemonsList);\n","export default function PokemonAboutInfo({ pokemonData }) {\n  return (\n    <div className=\"pokemon-page__about\">\n      <div className=\"about__column\">\n        <div>Id</div>\n        <div>Name</div>\n        <div>Height</div>\n        <div>Weight</div>\n        <div>Abilities</div>\n      </div>\n      <div className=\"about__column\">\n        <div>{pokemonData.id}</div>\n        <div>{pokemonData.name}</div>\n        <div>{pokemonData.height}</div>\n        <div>{pokemonData.weight}</div>\n        <div>\n          {pokemonData.abilities.map((item, index) => (\n            <span key={item.ability.name}>\n              {item.ability.name}\n              {index === pokemonData.abilities.length - 1 ? \"\" : \", \"}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function PokemonMoreInfo({ pokemonDataSpecies }) {\n  return (\n    <>\n      {pokemonDataSpecies && (\n        <div className=\"pokemon-page__about\">\n          <div className=\"about__column\">\n            <div>Base happines:</div>\n            <div>Capture rate:</div>\n            <div>Color:</div>\n            <div>Egg groups:</div>\n          </div>\n\n          <div className=\"about__column\">\n            <div>{pokemonDataSpecies.base_happiness}</div>\n            <div>{pokemonDataSpecies.capture_rate}</div>\n            <div>{pokemonDataSpecies.color.name}</div>\n            <div>\n              {pokemonDataSpecies.egg_groups.map((item, index) => (\n                <span key={item.name}>\n                  {item.name}\n                  {index === pokemonDataSpecies.egg_groups.length - 1\n                    ? \"\"\n                    : \", \"}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","export default function NotFound() {\n  return <div>Page doesn't exists</div>;\n}\n","import {\n  NavLink,\n  Route,\n  Switch,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport PokemonAboutInfo from \"./PokemonAboutInfo\";\nimport PokemonMoreInfo from \"./PokemonMoreInfo\";\nimport NotFound from \"./NotFound\";\n\nexport default function PokemonPage() {\n  const [pokemonData, setPokemonData] = useState();\n  const [pokemonDataSpecies, setPokemonSpeciesData] = useState();\n  const match = useRouteMatch();\n  const params = useParams();\n\n  useEffect(() => {\n    Promise.all([\n      fetch(`https://pokeapi.co/api/v2/pokemon/${params.id}`).then((response) =>\n        response.json()\n      ),\n      fetch(`https://pokeapi.co/api/v2/pokemon-species/${params.id}`).then(\n        (response) => response.json()\n      ),\n    ])\n      .then(([data1, data2]) => {\n        setPokemonData(data1);\n        setPokemonSpeciesData(data2);\n      })\n      .catch((error) => console.log(\"ERROR: \", error));\n  }, []);\n\n  return (\n    <>\n      {pokemonData && (\n        <div className=\"pokemon-page__wrapper\">\n          <div>\n            <img\n              src={pokemonData.sprites.other.dream_world.front_default}\n              width=\"250\"\n              height=\"auto\"\n              alt={pokemonData.name + \" image\"}\n            />\n          </div>\n          <div className=\"pokemon-page__right-box\">\n            <div className=\"pokemon-page__sub-pages\">\n              <NavLink\n                to={`${match.url}`}\n                exact\n                className=\"sub-pages__non-active\"\n                activeClassName=\"sub-pages__active\"\n              >\n                About\n              </NavLink>\n              <NavLink\n                to={`${match.url}/more`}\n                exact\n                className=\"sub-pages__non-active\"\n                activeClassName=\"sub-pages__active\"\n              >\n                More\n              </NavLink>\n            </div>\n            <Switch>\n              <Route exact path={`${match.path}`}>\n                <PokemonAboutInfo pokemonData={pokemonData} />\n              </Route>\n              <Route exact path={`${match.path}/more`}>\n                <PokemonMoreInfo pokemonDataSpecies={pokemonDataSpecies} />\n              </Route>\n              <Route>\n                <NotFound />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import { Link, useLocation } from \"react-router-dom\";\n\nexport default function Navigation() {\n  const location = useLocation();\n  const matchBaseUrl = location.pathname === \"/\";\n\n  return (\n    <div className=\"navigation container\">\n      {matchBaseUrl ? (\n        <div className=\"navigation__logo\">Pokemons</div>\n      ) : (\n        <Link to=\"/\" className=\"navigation__logo\">\n          Pokemons\n        </Link>\n      )}\n    </div>\n  );\n}\n","export default function Input({\n  value,\n  name,\n  placeholder,\n  type,\n  onChange,\n  className,\n}) {\n  return (\n    <input\n      type={type}\n      value={value}\n      name={name}\n      placeholder={placeholder}\n      onChange={onChange}\n      className={className}\n      autoComplete=\"off\"\n    />\n  );\n}\n","import \"./App.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport PokemonsList from \"./components/PokemonsList\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport PokemonPage from \"./components/PokemonPage\";\nimport Navigation from \"./components/Navigation\";\nimport Input from \"./components/Input\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  const [pokemonsData, setPokemonsData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n\n  const appEl = useRef();\n  const [listEl, setListEl] = useState(null);\n\n  useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=20`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonsData((prev) => [...prev, ...data.results]);\n      })\n      .catch((error) => console.log(error));\n  }, [offset]);\n\n  useEffect(() => {\n    if (listEl && listEl.scrollHeight < appEl.current.clientHeight) {\n      setOffset((offset) => offset + 20);\n    }\n  }, [pokemonsData, listEl]);\n\n  function handleScroll(e) {\n    let scrollHeight = e.target.scrollHeight;\n    let scrollTop = e.target.scrollTop;\n    let clientHeight = e.target.clientHeight;\n    if (scrollHeight - scrollTop === clientHeight) {\n      setOffset((offset) => offset + 20);\n    }\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <div className=\"App\" onScroll={handleScroll} ref={appEl}>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"page_header\">\n              <Navigation />\n              <div className=\"container\">\n                <Input\n                  type=\"text\"\n                  name=\"search\"\n                  onChange={handleSearchChange}\n                  placeholder=\"Search by name\"\n                  className=\"search\"\n                  value={searchValue}\n                />\n              </div>\n            </div>\n            <PokemonsList\n              pokemonsData={pokemonsData}\n              searchValue={searchValue}\n              ref={setListEl}\n            />\n          </Route>\n          <Route path=\"/pokemon/:id/about\">\n            <div className=\"page_header\">\n              <Navigation />\n            </div>\n            <PokemonPage />\n          </Route>\n          <Route>\n            <Navigation />\n            <NotFound />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}